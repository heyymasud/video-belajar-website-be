const multer = require('multer');
const path = require('path');

const storage = multer.diskStorage({

    /**
     * Sets the destination directory for file uploads.
     *
     * @param {import('express').Request} req - The request object.
     * @param {Object} file - The file being uploaded.
     * @param {Function} cb - The callback function to call with the destination directory.
     */
    destination: (req, file, cb) => {
        cb(null, 'upload');
    },
    /**
     * Sets the filename of the uploaded file.
     *
     * @param {import('express').Request} req - The request object.
     * @param {Object} file - The file being uploaded.
     * @param {Function} cb - The callback function to call with the filename.
     *
     * The filename is generated by concatenating the current time in milliseconds and the original file extension.
     */
    filename: (req, file, cb) => {
        const uniqueName = Date.now() + path.extname(file.originalname);
        cb(null, uniqueName);
    }
});

const upload = multer({
    storage,
    limits: {
        fileSize: 5 * 1024 * 1024 // 5 MB
    },
    /**
     * Filters the uploaded file based on its extension.
     *
     * @param {import('express').Request} req - The request object.
     * @param {Object} file - The file being uploaded.
     * @param {Function} cb - The callback function to call with the result.
     *
     * The following extensions are supported: .jpg, .jpeg, .png, .pdf. If the file extension is not supported, an error is passed to the callback function.
     */
    fileFilter: (req, file, cb) => {
        const ext = path.extname(file.originalname).toLowerCase();
        if (ext !== '.jpg' && ext !== '.jpeg' && ext !== '.png' && ext !== '.pdf') {
            return cb(new Error('File type is not supported'), false);
        }
        cb(null, true);
    }
})

module.exports = upload;